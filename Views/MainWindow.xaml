<Window x:Class="BackItUp.Views.MainWindow"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vc="clr-namespace:BackItUp.ViewModels.ValueConverters"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Title="Back It Up" Height="900" Width="1600"
        WindowStartupLocation="CenterScreen"
        ResizeMode="NoResize"
        WindowStyle="SingleBorderWindow"
        ShowInTaskbar="True"
        >

    <Window.Resources>
        <!-- Value Converters -->
        <vc:IgnoreNewItemPlaceHolderConverter x:Key="ignoreNewItemPlaceHolderConverter"/>
        <vc:IntConverter x:Key="intConverter"/>

        <!-- DataGrid style -->
        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="RowHeaderWidth" Value="0" />
        </Style>

        <Style x:Key="CenterGridHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="SeparatorBrush" Value="Transparent"/>
        </Style>

    </Window.Resources>

    <Grid Margin="5, 0, 5, 5" Background="White">
        <!-- Row Settings -->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Add/remove BackupItem buttons -->
        <Grid Grid.Row="0"
              Margin="0, 5, 0, 5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- Add a new backup job -->
            <Button
                x:Name="addBackupItemButton"
                Content="Add New Item"
                Margin="0, 0, 5, 0"
                Command="{Binding AddItemCmd}"
                HorizontalAlignment="Stretch"
                Grid.Column="0">
                <Button.ToolTip>
                    Add a new backup item to the list.
                </Button.ToolTip>
            </Button>

            <!-- Delete selected backup job -->
            <Button
                x:Name="removeBackupItemButton"
                Content="Remove Selected Item"
                Margin="5, 0, 0, 0"
                Command="{Binding DeleteItemCmd}"
                HorizontalAlignment="Stretch"
                Grid.Column="4">
                <Button.ToolTip>
                    Remove the selected backup item from the list.
                </Button.ToolTip>
            </Button>
        </Grid>

        <!-- Backup configuration datagrid -->
        <DataGrid
            x:Name="backupGrid"
            Grid.Row="1"
            SelectionMode="Single"
            SelectionUnit="FullRow"
            IsSynchronizedWithCurrentItem="True"
            ItemsSource="{Binding Path=BackupInfo}"
            SelectedIndex="{Binding RelativeSource={
                RelativeSource FindAncestor, 
                AncestorType={x:Type Window}},
                Path=DataContext.SelectedBackupItemIndex,
                UpdateSourceTrigger=PropertyChanged,
                Converter={StaticResource ignoreNewItemPlaceHolderConverter}}"
            CanUserAddRows="False"
            AlternatingRowBackground="LightGray"
            AlternationCount="2"
            AutoGenerateColumns="False"
            CanUserResizeColumns="False"
            CanUserReorderColumns="False">

            <DataGrid.Columns>
                <!-- Path to source file/folder -->
                <DataGridTemplateColumn
                    x:Name="originPathColumn"
                    Header="Origin Path"
                    Width="5*"
                    HeaderStyle="{StaticResource CenterGridHeaderStyle}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>

                            <Border
                                x:Name="originPathBorderBox">
                                <Grid
                                    x:Name="originPathGrid">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid.Style>
                                        <Style TargetType="{x:Type Grid}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding OriginPath, Mode=OneWay, ValidatesOnDataErrors=True}" Value="True">
                                                    <Setter Property="Background" Value="Red"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>

                                    <Grid.ToolTip>
                                        <ToolTip>
                                            <TextBlock>
                                                 Path to source file/folder.
                                            </TextBlock>
                                        </ToolTip>
                                    </Grid.ToolTip>

                                    <TextBlock 
                                        Grid.Column="0"
                                        x:Name="originPathText"
                                        Text="{Binding OriginPath, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Stretch"
                                        TextWrapping="Wrap"
                                        Margin="5, 0, 0, 0">
                                    </TextBlock>

                                    <Button Grid.Column="1"
                                            Content="File"
                                            Margin="5, 0, 5, 0"
                                            Command="{Binding RelativeSource={
                                                RelativeSource FindAncestor, 
                                                AncestorType={x:Type Window}},
                                                Path=DataContext.SelectOriginFileDialogCmd}"
                                            HorizontalContentAlignment="Right">
                                        <Button.ToolTip>
                                            Select a file.
                                        </Button.ToolTip>
                                    </Button>

                                    <Button Grid.Column="2"
                                            Content="Folder"
                                            Command="{Binding RelativeSource={
                                                RelativeSource FindAncestor, 
                                                AncestorType={x:Type Window}},
                                                Path=DataContext.SelectOriginFolderDialogCmd}"
                                            HorizontalContentAlignment="Right">
                                        <Button.ToolTip>
                                            Select a folder.
                                        </Button.ToolTip>
                                    </Button>

                                </Grid>
                            </Border>

                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Path to destination folder -->
                <DataGridTemplateColumn
                    x:Name="backupPathColumn"
                    Header="Backup Path"
                    Width="5*"
                    HeaderStyle="{StaticResource CenterGridHeaderStyle}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            
                            <Border
                                x:Name="backupPathBorderBox">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid.Style>
                                        <Style TargetType="{x:Type Grid}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding BackupPath, Mode=OneWay, ValidatesOnDataErrors=True}" Value="True">
                                                    <Setter Property="Background" Value="Red"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>

                                    <Grid.ToolTip>
                                        <ToolTip>
                                            <TextBlock>
                                                Path to destination folder.
                                            </TextBlock>
                                        </ToolTip>
                                    </Grid.ToolTip>

                                    <TextBlock 
                                        Grid.Column="0"
                                        Text="{Binding BackupPath, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Stretch"
                                        TextWrapping="Wrap"
                                        Margin="5, 0, 0, 0"/>

                                    <Button Grid.Column="1"
                                            Content="Folder"
                                            Margin="5, 0, 0, 0"
                                            Command="{Binding RelativeSource={
                                               RelativeSource FindAncestor, 
                                               AncestorType={x:Type Window}},
                                               Path=DataContext.SelectBackupFolderDialogCmd}"
                                            HorizontalContentAlignment="Right">
                                        <Button.ToolTip>
                                            Select a folder.
                                        </Button.ToolTip>
                                    </Button>

                                </Grid>
                            </Border>
                            
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Date last backed up -->
                <DataGridTemplateColumn
                    x:Name="lastBackupDayColumn"
                    Header="Last Backup"
                    Width="150"
                    IsReadOnly="True"
                    HeaderStyle="{StaticResource CenterGridHeaderStyle}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>

                            <Border
                                x:Name="dateLastBackedUpBorderBox">
                                <TextBlock 
                                    Grid.Column="0"
                                    x:Name="dateLastBackedUpText"
                                    Text="{Binding LastBackupDate, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    TextWrapping="Wrap"
                                    Margin="5, 0, 5, 0"
                                    Width="Auto">
                                </TextBlock>

                                <Border.ToolTip>
                                    <TextBlock>
                                        Date of last backup.<LineBreak/>Red: Item has not yet been backed up.
                                    </TextBlock>
                                </Border.ToolTip>
                            </Border>

                            <DataTemplate.Triggers>
                                <DataTrigger
                                    Binding="{Binding HasBeenBackedUp, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                    Value="False">
                                    <Setter TargetName="dateLastBackedUpBorderBox" Property="Background" Value="LightPink"/>
                                    <Setter TargetName="dateLastBackedUpText" Property="TextBlock.Text" Value="Never"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>

                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Frequency of backups -->
                <DataGridTextColumn
                    x:Name="backupFrequencyMultColumn"
                    Header="Frequency"
                    Binding="{Binding BackupFrequency,
                        Mode=TwoWay,
                        UpdateSourceTrigger=PropertyChanged,
                        Converter={StaticResource intConverter}}"
                    Width="Auto"
                    HeaderStyle="{StaticResource CenterGridHeaderStyle}">

                    <!--<DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding BackupFrequency, Mode=OneWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}">
                                    <Setter Property="BorderBrush" Value="Red"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Setter Property="Content" Value="1"/>
                                </DataTrigger>
                            </Style.Triggers>

                            <Setter Property="ToolTip" Value="Frequnecy of backups in {Period} units."/>
                        </Style>
                    </DataGridTextColumn.CellStyle>-->
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="Margin" Value="5, 0, 5, 0"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                    <DataGridTextColumn.EditingElementStyle>
                        <Style TargetType="TextBox">
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="MaxLength" Value="3"/>
                        </Style>
                    </DataGridTextColumn.EditingElementStyle>

                </DataGridTextColumn>

                <!-- Period between backups -->
                <DataGridTemplateColumn
                    x:Name="periodColumn"
                    Header="Period"
                    Width="*"
                    HeaderStyle="{StaticResource CenterGridHeaderStyle}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>

                            <ComboBox
                                SelectedValue="{Binding BackupPeriod, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                SelectedValuePath="PeriodKey"
                                DisplayMemberPath="PeriodValue"
                                SelectedIndex="0"
                                IsEditable="False">
                                <ComboBox.Resources>
                                    <Style TargetType="ComboBox">
                                        <Setter Property="ItemsSource" Value="{
                                            Binding RelativeSource={
                                            RelativeSource FindAncestor, 
                                            AncestorType={x:Type Window}},
                                            Path=DataContext.BackupPeriodList}" />
                                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    </Style>
                                </ComboBox.Resources>
                            </ComboBox>

                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Time for backups -->
                <DataGridTemplateColumn
                    x:Name="backupTimeOfDayColumn"
                    Header="Time"
                    Width="95"
                    HeaderStyle="{StaticResource CenterGridHeaderStyle}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>

                            <xctk:TimePicker
                                Name="backupTimeOfDay"
                                Value="{Binding BackupTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                IsReadOnly="False">
                            </xctk:TimePicker>

                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Date and time of next backup -->
                <DataGridTemplateColumn
                    x:Name="nextBackupDateColumn"
                    Header="Next Backup"
                    Width="175"
                    HeaderStyle="{StaticResource CenterGridHeaderStyle}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>

                            <xctk:DateTimePicker
                                x:Name="lastBackupDate"
                                Value="{Binding NextBackupDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                Margin="5, 0, 5, 0"
                                Format="Custom"
                                FormatString="MM-dd-yyyy hh:mm tt"
                                UpdateValueOnEnterKey="True"
                                >
                            </xctk:DateTimePicker>

                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Toggle for backing up this file/folder -->
                <DataGridTemplateColumn
                    x:Name="backupEnabledColumn"
                    Header="Enabled"
                    Width="Auto"
                    HeaderStyle="{StaticResource CenterGridHeaderStyle}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Border
                                x:Name="backupEnabledBorderBox">
                                <CheckBox
                                IsChecked="{Binding BackupEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <CheckBox.Style>
                                        <Style TargetType="CheckBox">
                                            <Setter Property="HorizontalAlignment" Value="Center" />
                                            <Setter Property="VerticalAlignment" Value="Center" />
                                        </Style>
                                    </CheckBox.Style>

                                    <CheckBox.ToolTip>
                                        <TextBlock>
                                            Is this backup enabled?
                                        </TextBlock>
                                    </CheckBox.ToolTip>
                                </CheckBox>

                                <Border.ToolTip>
                                    <TextBlock>
                                        Green: Task is scheduled.
                                        <LineBreak/>
                                        Red: Task is unscheduled.
                                    </TextBlock>
                                </Border.ToolTip>

                            </Border>

                            <DataTemplate.Triggers>
                                <DataTrigger
                                    Binding="{Binding BackupActive, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                    Value="True">
                                    <Setter TargetName="backupEnabledBorderBox" Property="Background" Value="LightGreen"/>
                                </DataTrigger>
                                <DataTrigger
                                    Binding="{Binding BackupActive, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                    Value="False">
                                    <Setter TargetName="backupEnabledBorderBox" Property="Background" Value="LightPink"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>

                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <!-- Grid for holding configuration buttons -->
        <Grid Grid.Row="2">
            <!-- Row Settings -->
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Column Settings -->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <!-- Configuration buttons -->
            <Button
                x:Name="saveConfigButton"
                Command="{Binding SaveConfigCmd}"
                Grid.Row="1" Grid.Column="1"
                Margin="0, 5, 0, 0"
                Content="Save Settings">
                <Button.ToolTip>
                    Save the current configuration.
                </Button.ToolTip>
            </Button>
            
            <Button
                x:Name="resetConfigButton"
                Command="{Binding ResetConfigCmd}"
                Grid.Row="1" Grid.Column="3"
                Margin="0, 5, 0, 0"
                Content="Reset Settings">
                <Button.ToolTip>
                    Delete the current configuration.
                </Button.ToolTip>
            </Button>

            <CheckBox
                x:Name="isRunOnStartupEnabledCheckBox"
                IsChecked="{Binding IsRunOnStartupEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Command="{Binding ToggleRunOnStartupCmd}"
                Grid.Row="1" Grid.Column="5"
                Margin="0, 5, 0, 0"
                VerticalAlignment="Center"
                HorizontalAlignment="Right"
                Content="Reset Settings">
                <!--FlowDirection="RightToLeft"-->
                <CheckBox.ToolTip>
                    Enable or disable launching the program on Windows startup.
                </CheckBox.ToolTip>
                <CheckBox.Resources>
                    <Style TargetType="CheckBox">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsRunOnStartupEnabled, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                     Value="True">
                                <Setter Property="Background" Value="LightGreen"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsRunOnStartupEnabled, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                     Value="False">
                                <Setter Property="Background" Value="LightPink"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    
                    <!--<Style TargetType="{x:Type Path}">
                        <Setter Property="FlowDirection" Value="LeftToRight" />
                    </Style>-->
                </CheckBox.Resources>
            </CheckBox>
        </Grid>
    </Grid>
</Window>